--- /tmp/stringi-bbbf25bbe6e1aa198389dd08636a3360b5788213/src/icu69/i18n/number_skeletons.cpp	2021-05-01 15:37:10.000000000 +1000
+++ i18n/number_skeletons.cpp	2023-01-16 19:35:27.074820720 +1100
@@ -177,6 +177,9 @@
             return Notation::simple();
         default:
             UPRV_UNREACHABLE;
+#ifdef U_STRINGI_PATCHES
+            return Notation::simple();
+#endif
     }
 }
 
@@ -190,6 +193,9 @@
             return MeasureUnit::getPermille();
         default:
             UPRV_UNREACHABLE;
+#ifdef U_STRINGI_PATCHES
+            return MeasureUnit();
+#endif
     }
 }
 
@@ -205,6 +211,9 @@
             return Precision::currency(UCURR_USAGE_CASH);
         default:
             UPRV_UNREACHABLE;
+#ifdef U_STRINGI_PATCHES
+            return Precision::integer();
+#endif
     }
 }
 
@@ -234,6 +243,9 @@
             return UNUM_ROUND_UNNECESSARY;
         default:
             UPRV_UNREACHABLE;
+#ifdef U_STRINGI_PATCHES
+            return UNUM_ROUND_CEILING;
+#endif
     }
 }
 
@@ -786,6 +798,9 @@
 
         default:
             UPRV_UNREACHABLE;
+#ifdef U_STRINGI_PATCHES
+            return STATE_SCALE;
+#endif
     }
 }
 
@@ -1016,7 +1031,8 @@
         status = U_NUMBER_SKELETON_SYNTAX_ERROR;
         return;
     }
-    const UChar* currencyCode = segment.toTempUnicodeString().getBuffer();
+    UnicodeString tmp = segment.toTempUnicodeString();
+    const UChar* currencyCode = tmp.getBuffer();  // Marek's patch
     UErrorCode localStatus = U_ZERO_ERROR;
     CurrencyUnit currency(currencyCode, localStatus);
     if (U_FAILURE(localStatus)) {
@@ -1338,7 +1354,7 @@
         // @, @@, @@@
         maxSig = minSig;
     }
-    UNumberRoundingPriority priority;
+    UNumberRoundingPriority priority = UNUM_ROUNDING_PRIORITY_RELAXED;
     if (offset < segment.length()) {
         if (maxSig == -1) {
             // The wildcard character is not allowed with the priority annotation
